Section 1: Theory Questions [26 points]

1.1     The deque module is part of which python library?	1 point
Collections

   1.2   What are 2 differences that distinguish a tree from a graph?	2 points
	Tree has no cycles (always acyclic), but a graph can be either acyclic or cyclic.
	Trees have a hierarchical structure, where there is a root node and each node in a tree has a parent-child relationship with other nodes, forming a clear hierarchy; However, graphs do not necessarily have a hierarchical structure, where nodes can be connected in any arbitrary way.

   1.3    Give the definitions of time complexity and space complexity	2 points
	Time complexity is a measure of the amount of time an algorithm takes to complete as a function of the size of the input to the algorithm.
	Space complexity is a measure of the amount of memory an algorithm requires to execute as a function of the size of the input.

   1.4    Describe the bubble sort algorithm and its complexity.
 What is guaranteed at the end of the first pass? 	5 points
	Bubble Sort compares adjacent elements, and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted.
1.	Start from the beginning of the list.
2.	Compare each pair of adjacent elements.
3.	If the elements are in the wrong order, swap them.
4.	Move to the next pair of elements and repeat steps 2 and 3.
5.	Continue this process until you reach the end of the list.
	Time complexity: worst O(n^2), best (already sorted) O(n), average O(n^2).
	Space Complexity: O(1).
	After the first pass, the largest (or smallest) element is guaranteed to be in its final sorted position.

   1.5    Explain what LIFO and FIFO are and how each works in practice
             with a named data structure	8 points
	LIFO is Last In and First Out, where the last element added to the structure is the first one to be removed. The data structure is stack, which is often used for function calls and managing local variables.
	FIFO is First In and First Out, where the first element added to the structure is the first one to be removed. The data structure is queue, which is often used for BFS in graphs, job scheduling, task management, and etc.

1.6    What is a Balanced Binary Tree and what would be the best root? Walkthrough how you search using this structure.	8 points
	A Balanced Binary Tree is a type of binary search tree in which the height of the two child subtrees of any node differs by at most one, where the left and right subtrees of any node differ in height by at most one, and both the left and right subtrees are themselves balanced binary trees.
	The best root should be the median element in the sorted order of the elements to be inserted. This ensures that both the left and right subtrees have a roughly equal number of nodes, contributing to the balance of the tree.
	Walkthrough of search:
1.	Begin the search at the root of the tree.
2.	Compare the target value with the value at the current node. 
a)	If the target value is equal to the current node's value, the search is successful. 
b)	If the target value is less than the current node's value, move to the left subtree. 
c)	If the target value is greater than the current node's value, move to the right subtree.
3.	Repeat the process 2 recursively in the selected subtree until the target value is found or the value is not found in the tree.
